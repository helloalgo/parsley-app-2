// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: app.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OutputType int32

const (
	OutputType_OT_STDOUT OutputType = 0
	OutputType_OT_STDERR OutputType = 1
	OutputType_OT_BINARY OutputType = 2
	OutputType_OT_EXIT   OutputType = 3
)

// Enum value maps for OutputType.
var (
	OutputType_name = map[int32]string{
		0: "OT_STDOUT",
		1: "OT_STDERR",
		2: "OT_BINARY",
		3: "OT_EXIT",
	}
	OutputType_value = map[string]int32{
		"OT_STDOUT": 0,
		"OT_STDERR": 1,
		"OT_BINARY": 2,
		"OT_EXIT":   3,
	}
)

func (x OutputType) Enum() *OutputType {
	p := new(OutputType)
	*p = x
	return p
}

func (x OutputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OutputType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_proto_enumTypes[0].Descriptor()
}

func (OutputType) Type() protoreflect.EnumType {
	return &file_app_proto_enumTypes[0]
}

func (x OutputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OutputType.Descriptor instead.
func (OutputType) EnumDescriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{0}
}

type RunLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum real time
	RealTime uint32 `protobuf:"varint,1,opt,name=realTime,proto3" json:"realTime,omitempty"`
	// Maximum process count
	ProcessCount uint32 `protobuf:"varint,2,opt,name=processCount,proto3" json:"processCount,omitempty"`
	// Maximum memory (stack will be also equal to this value)
	Memory uint32 `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	// Maximum write size
	Write uint32 `protobuf:"varint,4,opt,name=write,proto3" json:"write,omitempty"`
	// Seccomp policy (see core documentation)
	Seccomp string `protobuf:"bytes,5,opt,name=seccomp,proto3" json:"seccomp,omitempty"`
	// Stream output (stdout, stderr each)
	StreamSize uint32 `protobuf:"varint,6,opt,name=streamSize,proto3" json:"streamSize,omitempty"`
}

func (x *RunLimits) Reset() {
	*x = RunLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLimits) ProtoMessage() {}

func (x *RunLimits) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLimits.ProtoReflect.Descriptor instead.
func (*RunLimits) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{1}
}

func (x *RunLimits) GetRealTime() uint32 {
	if x != nil {
		return x.RealTime
	}
	return 0
}

func (x *RunLimits) GetProcessCount() uint32 {
	if x != nil {
		return x.ProcessCount
	}
	return 0
}

func (x *RunLimits) GetMemory() uint32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *RunLimits) GetWrite() uint32 {
	if x != nil {
		return x.Write
	}
	return 0
}

func (x *RunLimits) GetSeccomp() string {
	if x != nil {
		return x.Seccomp
	}
	return ""
}

func (x *RunLimits) GetStreamSize() uint32 {
	if x != nil {
		return x.StreamSize
	}
	return 0
}

type RunParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args    []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *RunParams) Reset() {
	*x = RunParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunParams) ProtoMessage() {}

func (x *RunParams) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunParams.ProtoReflect.Descriptor instead.
func (*RunParams) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{2}
}

func (x *RunParams) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunParams) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type RunOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message output throttling latency (in milliseconds)
	OutputThrottle uint32     `protobuf:"varint,1,opt,name=outputThrottle,proto3" json:"outputThrottle,omitempty"`
	Limits         *RunLimits `protobuf:"bytes,2,opt,name=limits,proto3" json:"limits,omitempty"`
	Params         *RunParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *RunOptions) Reset() {
	*x = RunOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunOptions) ProtoMessage() {}

func (x *RunOptions) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunOptions.ProtoReflect.Descriptor instead.
func (*RunOptions) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{3}
}

func (x *RunOptions) GetOutputThrottle() uint32 {
	if x != nil {
		return x.OutputThrottle
	}
	return 0
}

func (x *RunOptions) GetLimits() *RunLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *RunOptions) GetParams() *RunParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type RunOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type OutputType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.OutputType" json:"type,omitempty"`
	Data []byte     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RunOutput) Reset() {
	*x = RunOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunOutput) ProtoMessage() {}

func (x *RunOutput) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunOutput.ProtoReflect.Descriptor instead.
func (*RunOutput) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{4}
}

func (x *RunOutput) GetType() OutputType {
	if x != nil {
		return x.Type
	}
	return OutputType_OT_STDOUT
}

func (x *RunOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetFileArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetFileArgs) Reset() {
	*x = SetFileArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFileArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFileArgs) ProtoMessage() {}

func (x *SetFileArgs) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFileArgs.ProtoReflect.Descriptor instead.
func (*SetFileArgs) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{5}
}

func (x *SetFileArgs) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *SetFileArgs) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SettingChangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SettingChangeResult) Reset() {
	*x = SettingChangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingChangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingChangeResult) ProtoMessage() {}

func (x *SettingChangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingChangeResult.ProtoReflect.Descriptor instead.
func (*SettingChangeResult) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{6}
}

func (x *SettingChangeResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SettingChangeResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RunInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *RunInput) Reset() {
	*x = RunInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInput) ProtoMessage() {}

func (x *RunInput) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInput.ProtoReflect.Descriptor instead.
func (*RunInput) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{7}
}

func (x *RunInput) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

var File_app_proto protoreflect.FileDescriptor

var file_app_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x09,
	0x52, 0x75, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x63, 0x6f,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x39, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x88, 0x01, 0x0a,
	0x0a, 0x52, 0x75, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x68, 0x72, 0x6f, 0x74,
	0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x28, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x52, 0x75, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2a, 0x46, 0x0a, 0x0a, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x54, 0x5f,
	0x53, 0x54, 0x44, 0x4f, 0x55, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x54, 0x5f, 0x53,
	0x54, 0x44, 0x45, 0x52, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x54, 0x5f, 0x42, 0x49,
	0x4e, 0x41, 0x52, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49,
	0x54, 0x10, 0x03, 0x32, 0xb6, 0x02, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x52, 0x75,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x75, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x32, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_app_proto_rawDescOnce sync.Once
	file_app_proto_rawDescData = file_app_proto_rawDesc
)

func file_app_proto_rawDescGZIP() []byte {
	file_app_proto_rawDescOnce.Do(func() {
		file_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_proto_rawDescData)
	})
	return file_app_proto_rawDescData
}

var file_app_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_app_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_app_proto_goTypes = []interface{}{
	(OutputType)(0),             // 0: proto.OutputType
	(*Empty)(nil),               // 1: proto.Empty
	(*RunLimits)(nil),           // 2: proto.RunLimits
	(*RunParams)(nil),           // 3: proto.RunParams
	(*RunOptions)(nil),          // 4: proto.RunOptions
	(*RunOutput)(nil),           // 5: proto.RunOutput
	(*SetFileArgs)(nil),         // 6: proto.SetFileArgs
	(*SettingChangeResult)(nil), // 7: proto.SettingChangeResult
	(*RunInput)(nil),            // 8: proto.RunInput
}
var file_app_proto_depIdxs = []int32{
	2, // 0: proto.RunOptions.limits:type_name -> proto.RunLimits
	3, // 1: proto.RunOptions.params:type_name -> proto.RunParams
	0, // 2: proto.RunOutput.type:type_name -> proto.OutputType
	6, // 3: proto.ExecutionContainer.SetFile:input_type -> proto.SetFileArgs
	4, // 4: proto.ExecutionContainer.SetRunConfig:input_type -> proto.RunOptions
	8, // 5: proto.ExecutionContainer.RunInteractive:input_type -> proto.RunInput
	1, // 6: proto.ExecutionContainer.Stop:input_type -> proto.Empty
	1, // 7: proto.ExecutionContainer.Reset:input_type -> proto.Empty
	7, // 8: proto.ExecutionContainer.SetFile:output_type -> proto.SettingChangeResult
	7, // 9: proto.ExecutionContainer.SetRunConfig:output_type -> proto.SettingChangeResult
	5, // 10: proto.ExecutionContainer.RunInteractive:output_type -> proto.RunOutput
	7, // 11: proto.ExecutionContainer.Stop:output_type -> proto.SettingChangeResult
	7, // 12: proto.ExecutionContainer.Reset:output_type -> proto.SettingChangeResult
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_app_proto_init() }
func file_app_proto_init() {
	if File_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFileArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingChangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_proto_goTypes,
		DependencyIndexes: file_app_proto_depIdxs,
		EnumInfos:         file_app_proto_enumTypes,
		MessageInfos:      file_app_proto_msgTypes,
	}.Build()
	File_app_proto = out.File
	file_app_proto_rawDesc = nil
	file_app_proto_goTypes = nil
	file_app_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExecutionContainerClient is the client API for ExecutionContainer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutionContainerClient interface {
	// Container state mutations
	SetFile(ctx context.Context, in *SetFileArgs, opts ...grpc.CallOption) (*SettingChangeResult, error)
	SetRunConfig(ctx context.Context, in *RunOptions, opts ...grpc.CallOption) (*SettingChangeResult, error)
	// Actions
	RunInteractive(ctx context.Context, opts ...grpc.CallOption) (ExecutionContainer_RunInteractiveClient, error)
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SettingChangeResult, error)
	Reset(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SettingChangeResult, error)
}

type executionContainerClient struct {
	cc grpc.ClientConnInterface
}

func NewExecutionContainerClient(cc grpc.ClientConnInterface) ExecutionContainerClient {
	return &executionContainerClient{cc}
}

func (c *executionContainerClient) SetFile(ctx context.Context, in *SetFileArgs, opts ...grpc.CallOption) (*SettingChangeResult, error) {
	out := new(SettingChangeResult)
	err := c.cc.Invoke(ctx, "/proto.ExecutionContainer/SetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executionContainerClient) SetRunConfig(ctx context.Context, in *RunOptions, opts ...grpc.CallOption) (*SettingChangeResult, error) {
	out := new(SettingChangeResult)
	err := c.cc.Invoke(ctx, "/proto.ExecutionContainer/SetRunConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executionContainerClient) RunInteractive(ctx context.Context, opts ...grpc.CallOption) (ExecutionContainer_RunInteractiveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExecutionContainer_serviceDesc.Streams[0], "/proto.ExecutionContainer/RunInteractive", opts...)
	if err != nil {
		return nil, err
	}
	x := &executionContainerRunInteractiveClient{stream}
	return x, nil
}

type ExecutionContainer_RunInteractiveClient interface {
	Send(*RunInput) error
	Recv() (*RunOutput, error)
	grpc.ClientStream
}

type executionContainerRunInteractiveClient struct {
	grpc.ClientStream
}

func (x *executionContainerRunInteractiveClient) Send(m *RunInput) error {
	return x.ClientStream.SendMsg(m)
}

func (x *executionContainerRunInteractiveClient) Recv() (*RunOutput, error) {
	m := new(RunOutput)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *executionContainerClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SettingChangeResult, error) {
	out := new(SettingChangeResult)
	err := c.cc.Invoke(ctx, "/proto.ExecutionContainer/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executionContainerClient) Reset(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SettingChangeResult, error) {
	out := new(SettingChangeResult)
	err := c.cc.Invoke(ctx, "/proto.ExecutionContainer/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecutionContainerServer is the server API for ExecutionContainer service.
type ExecutionContainerServer interface {
	// Container state mutations
	SetFile(context.Context, *SetFileArgs) (*SettingChangeResult, error)
	SetRunConfig(context.Context, *RunOptions) (*SettingChangeResult, error)
	// Actions
	RunInteractive(ExecutionContainer_RunInteractiveServer) error
	Stop(context.Context, *Empty) (*SettingChangeResult, error)
	Reset(context.Context, *Empty) (*SettingChangeResult, error)
}

// UnimplementedExecutionContainerServer can be embedded to have forward compatible implementations.
type UnimplementedExecutionContainerServer struct {
}

func (*UnimplementedExecutionContainerServer) SetFile(context.Context, *SetFileArgs) (*SettingChangeResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFile not implemented")
}
func (*UnimplementedExecutionContainerServer) SetRunConfig(context.Context, *RunOptions) (*SettingChangeResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRunConfig not implemented")
}
func (*UnimplementedExecutionContainerServer) RunInteractive(ExecutionContainer_RunInteractiveServer) error {
	return status.Errorf(codes.Unimplemented, "method RunInteractive not implemented")
}
func (*UnimplementedExecutionContainerServer) Stop(context.Context, *Empty) (*SettingChangeResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedExecutionContainerServer) Reset(context.Context, *Empty) (*SettingChangeResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}

func RegisterExecutionContainerServer(s *grpc.Server, srv ExecutionContainerServer) {
	s.RegisterService(&_ExecutionContainer_serviceDesc, srv)
}

func _ExecutionContainer_SetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFileArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionContainerServer).SetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ExecutionContainer/SetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionContainerServer).SetFile(ctx, req.(*SetFileArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExecutionContainer_SetRunConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionContainerServer).SetRunConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ExecutionContainer/SetRunConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionContainerServer).SetRunConfig(ctx, req.(*RunOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExecutionContainer_RunInteractive_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExecutionContainerServer).RunInteractive(&executionContainerRunInteractiveServer{stream})
}

type ExecutionContainer_RunInteractiveServer interface {
	Send(*RunOutput) error
	Recv() (*RunInput, error)
	grpc.ServerStream
}

type executionContainerRunInteractiveServer struct {
	grpc.ServerStream
}

func (x *executionContainerRunInteractiveServer) Send(m *RunOutput) error {
	return x.ServerStream.SendMsg(m)
}

func (x *executionContainerRunInteractiveServer) Recv() (*RunInput, error) {
	m := new(RunInput)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ExecutionContainer_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionContainerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ExecutionContainer/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionContainerServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExecutionContainer_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionContainerServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ExecutionContainer/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionContainerServer).Reset(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExecutionContainer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ExecutionContainer",
	HandlerType: (*ExecutionContainerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetFile",
			Handler:    _ExecutionContainer_SetFile_Handler,
		},
		{
			MethodName: "SetRunConfig",
			Handler:    _ExecutionContainer_SetRunConfig_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _ExecutionContainer_Stop_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _ExecutionContainer_Reset_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunInteractive",
			Handler:       _ExecutionContainer_RunInteractive_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "app.proto",
}
